docker pull gitlab/gitlab-ce

docker run  -p 8443:443 -p 8081:80  -p 2222:22 --name gitlab --restart always  -v /opt/gitlab/config:/etc/gitlab -v /opt/gitlab/logs:/var/log/gitlab -v  /opt/gitlab/data:/var/opt/gitlab -d gitlab/gitlab-ce

#--restart always  当容器退出或宿主机重启的时候，容器接着会始终重启

docker run --name gitlab -p 8443:443 -p 8081:80  -p 2222:22  -v /opt/gitlab/config:/etc/gitlab -v /opt/gitlab/logs:/var/log/gitlab -v  /opt/gitlab/data:/var/opt/gitlab -d gitlab/gitlab-ce

#进入容器

#初始化服务
gitlab-ctl reconfigure

#重置密码
gitlab-rails console production
user = User.where(username: 'root').first
user.password = 'ma123456'
user.password_confirmation='ma123456'
user.save



新建项目
1.新建项目
ssh-keygen -t rsa -C "your_email@youremail.com"
2.添加SSH Keys
3.cd /opt/gitlab/config    
4.chmod 600 ssh_host_ecdsa_key ssh_host_ed25519_key ssh_host_rsa_key
5.https://www.jianshu.com/p/080a962c35b6
按上面的方式，gitlab容器运行没问题，但在gitlab上创建项目的时候，生成项目的URL访问地址是按容器的hostname来生成的，也就是容器的id。
作为gitlab服务器，我们需要一个固定的URL访问地址，于是需要配置gitlab.rb（宿主机路径：/opt/gitlab/config/gitlab.rb）。
# gitlab.rb文件内容默认全是注释
$ vim /opt/gitlab/config/gitlab.rb

# 配置http协议所使用的访问地址,不加端口号默认为80
external_url '192.168.56.2'

# 配置ssh协议所使用的访问地址和端口
gitlab_rails['gitlab_ssh_host'] = '192.168.56.2'
gitlab_rails['gitlab_shell_ssh_port'] = 2222 # 此端口是run时22端口映射的222端口

#拉取项目
git clone ssh://git@192.168.56.2:2222/root/blog.git

git clone http://192.168.56.2:8081/root/blog.git



:wq #保存配置文件并退出